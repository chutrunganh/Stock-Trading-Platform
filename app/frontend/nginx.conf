server {
    listen 80;
    server_name localhost;

    # Block dangerous HTTP methods
    if ($request_method !~ ^(GET|POST|HEAD|DELETE)$ ) {
        return 444; # Silent rejection
    }

    # Basic security headers
    # Prevent clickjacking attacks by not allowing the site to be embedded in iframes
    add_header X-Frame-Options "SAMEORIGIN";
    
    # Prevent MIME type sniffing which could lead to security vulnerabilities
    add_header X-Content-Type-Options "nosniff";
    
    # Enable cross-site scripting (XSS) filter built into modern browsers
    add_header X-XSS-Protection "1; mode=block";
    
    # Control DNS prefetching to prevent information leakage
    add_header X-DNS-Prefetch-Control "off";
    
    # Disable server version display in headers and error pages
    server_tokens off;

    # Buffer size settings to prevent buffer overflow attacks
    client_body_buffer_size 50K;
    client_header_buffer_size 5k;
    client_max_body_size 10m;
    large_client_header_buffers 2 10k;

    # Timeouts to prevent slow HTTP DOS attacks
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Serve static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Handle client-side routing: fallback to index.html
        try_files $uri $uri/ /index.html;

        # Deny access to hidden files (starting with a dot)
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Disable directory listing
        autoindex off;
    }

    # Proxy API requests to the backend service
    location /api/ {
        proxy_pass http://backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Security headers for proxy
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        
        ## Rate Limiting ike this will be useless if you use Cloudflare Tunnel since all the traffic your nginx
        # see is the IP of Cloudflare Tunnel server, not the client's IP. In that case, you will need to use the real_ip module to work around this.
        # # Rate limiting to prevent brute force attacks
        # limit_req zone=one burst=10 nodelay;
        # limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    }

    # Optional: Add error pages or other configurations
    error_page 403 404 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }
}